---
interface Props {
  course: {
    id: number;
    title: string;
    description: string;
    image: string;
    price: number;
    category: string;
    level: string;
  };
}

const { course } = Astro.props;

const formatPrice = (price: number) => {
  return new Intl.NumberFormat('id-ID', {
    style: 'currency',
    currency: 'IDR',
    minimumFractionDigits: 0,
    maximumFractionDigits: 0,
  }).format(price);
};
---

<div class="bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow">
  <img src={course.image} alt={course.title} class="w-full h-48 object-cover rounded-t-lg" />
  <div class="p-6">
    <div class="flex items-center justify-between mb-2">
      <span class="text-sm font-medium text-primary">{course.category}</span>
      <span class="text-xs font-medium text-gray-500 px-2 py-1 bg-gray-100 rounded-full">{course.level}</span>
    </div>
    <h3 class="text-lg font-semibold text-gray-900 mb-2">{course.title}</h3>
    <p class="text-sm text-gray-500 mb-4">{course.description}</p>
    <div class="flex items-center justify-between">
      <span class="text-lg font-bold text-gray-900">{formatPrice(course.price)}</span>
      <a href={`/courses/${course.id}`} class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary/90">
        View Details
      </a>
    </div>
  </div>
</div>